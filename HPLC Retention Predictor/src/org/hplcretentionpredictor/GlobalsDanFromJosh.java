package org.hplcretentionpredictor;

public class GlobalsDanFromJosh
{
	public static double dRefColumnID = .21;
	public static double dRefColumnLength = 5;
	public static double dRefFlowRate = 0.8;
	
	// For a 2.1 x 50 mm column at 800 uL/min
	public static double[][] dDeadTimeArray = {
		{ 0.05, 0.145666667}, //3.5 uM particle dead time profile 
		 { 0.1, 0.139666667},
		 { 0.2, 0.132666667},
		 { 0.3, 0.127},
		 { 0.4, 0.124},
		 { 0.5, 0.121666},
		 { 0.6, 0.121},
		 { 0.7, 0.122},
		 { 0.8, 0.12233333},
		 {0.9, 0.124},
		 { 0.95, 0.1243}
	};
	
	
	public static String[] strPredefinedValues = {
		"Yan 5 min gradient from 5% to 95%, 400 uL/min, 2.1 x 100 mm, lot B13101",
		"Yan 30 min gradient from 5% to 95%, 400 uL/min, 2.1 x 100 mm, lot B13101",
		"Yan 10 min gradient from 5% to 95%, 200 uL/min, 2.1 x 100 mm, lot B13101",
		"Yan 10 min gradient from 5% to 95%, 800 uL/min, 2.1 x 100 mm, lot B13101",
		"Dana method A",
		"Dana method B",
		"Dana method C",
		"Dana method D",
		"Emma A",
		"Emma B - remove benzamide",
		"Emma C",
		"Emma D",
		"Corey A - remove n-methyl acetamide",
		"Corey B - remove n-methyl acetamide",
		"Corey C - remove n-methyl acetamide",
		"Corey D - remove n-methyl acetamide",
		"David A",
		"David C",
		"David D",
		"Dwight A - last 4 benzamides might be bad",
		"Dwight B - last 4 benzamides might be bad",
		"Dwight C - last 4 benzamides might be bad",
		"Dwight D - last 4 benzamides might be bad",
		"Yamil A",
		"Yamil B",
		"Yamil C",
		"Yamil D",
	};
	
	
	public static double[][][] dGradientPrograms = 
	{
		{ // Yan 5 min gradient
			{2.1, 100, 0.4, 0.125},
			{0.0, 5.0},
			{5.0, 95.0},
			{10, 95}
		},
		{ // Yan 30 min
			{2.1, 100, 0.4, 0.125},
			{0, 5},
			{30, 95},
			{35, 95}
		},
		{ // Yan 10 min 0.2 ml/min
			{2.1, 100, 0.2, 0.25},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		{ // Yan 10 min 0.8 ml/min
			{2.1, 100, 0.8, 0.0625},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		{ // Dana method A
			{2.1, 100, 0.4, 0.11},
			{0, 5},
			{5, 95},
			{10, 95}
		},
		{ // Dana method B
			{2.1, 100, 0.4, 0.11},
			{0, 5},
			{30, 95},
			{35, 95}
		},
		{ // Dana method C
			{2.1, 100, 0.2, 0.22},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		{ // Dana method D
			{2.1, 100, 0.8, 0.055},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		{ // Emma method A
			{2.1, 100, 0.4, 0.08},
			{0, 5},
			{5, 95},
			{10, 95}
		},
		{ // Emma method B
			{2.1, 100, 0.4, 0.08},
			{0, 5},
			{30, 95},
			{35, 95}
		},
		{ // Emma method C
			{2.1, 100, 0.2, 0.16},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		{ // Emma method D
			{2.1, 100, 0.8, 0.04},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		{ // Corey A
			{2.1, 100, 0.4, 0.06},
			{0, 5},
			{5, 95},
			{10, 95}
		},
		{ // Corey B
			{2.1, 100, 0.4, 0.06},
			{0, 5},
			{30, 95},
			{35, 95}
		},
		{ // Corey C
			{2.1, 100, 0.2, 0.12},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		{ // Corey D
			{2.1, 100, 0.8, 0.03},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		{ // David A
			{2.1, 100, 0.4, 0.09},
			{0, 5},
			{5, 95},
			{10, 95}
		},
		{ // David C
			{2.1, 100, 0.2, 0.18},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		{ // David D
			{2.1, 100, 0.8, 0.045},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		{ // Dwight A
			{2.1, 100, 0.4, 0.125},
			{0, 5},
			{5, 95},
			{10, 95}
		},
		{ // Dwight B
			{2.1, 100, 0.4, 0.125},
			{0, 5},
			{30, 95},
			{35, 95}
		},
		{ // Dwight C
			{2.1, 100, 0.2, 0.25},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		{ // Dwight D
			{2.1, 100, 0.8, 0.0625},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		{ // Yamil A
			{2.1, 100, 0.4, 0.036},
			{0, 5},
			{5, 95},
			{10, 95}
		},
		{ // Yamil B
			{2.1, 100, 0.4, 0.036},
			{0, 5},
			{30, 95},
			{35, 95}
		},
		{ // Yamil C
			{2.1, 100, 0.2, 0.072},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		{ // Yamil D
			{2.1, 100, 0.8, 0.018},
			{0, 5},
			{10, 95},
			{15, 95}
		},
		
	};
	
	// Enter the retention times of the standards here
	// 
	// The first part of the array lists the retention times (in min) of the back-calculation standards
	// The second part of the array lists the retention times (in min) of the test compounds, in the same order they are listed below
	// Important: if a retention time isn't available, just enter a zero ('0') in its place. 
	public static double[][][] dPredefinedValues = {
		{ // Yan A
			{
				0.805,
				1.140,
				1.685,
				1.983,
				2.186,
				2.572,
				3.019,
				3.480,
				3.888,
				4.259,
				4.607,
				4.936,
				5.247,
				5.541,
				5.814,
				6.084,
				6.400,
				6.788,
				7.266,
				7.873
			},
			{
				2.0782,
				2.7121,
				0.0,//2.9424, *This was not a good peak
				4.3445,
				4.6737,
				2.67,
				2.9505,
				4.7596,
				4.3445,
				3.3199,
				7.0576,
				2.9406,
				4.0651,
				5.9175,
				1.7943,
				2.9533,
				3.0082,
				2.9733,
				4.1542

			}
		},
		{ // Yan B
			{
				0.789,
				1.073,
				2.211,
				3.135,
				3.863,
				5.376,
				7.457,
				9.996,
				12.379,
				14.506,
				16.430,
				18.195,
				19.889,
				21.527,
				23.133,
				24.686,
				26.163,
				27.556,
				28.835,
				29.992
			},
			{
				3.620,
				4.318,
				0.000,
				13.526,
				16.617,
				6.229,
				8.116,
				17.365,
				13.534,
				10.974,
				28.509,
				8.373,
				16.044,
				24.071,
				3.262,
				8.897,
				9.129,
				8.988,
				15.179
			}
		},
		{ // Yan C
			{
				1.585,
				2.2392,
				3.3409,
				3.9474,
				4.3535,
				5.1285,
				6.026,
				6.9489,
				7.7649,
				8.5057,
				9.2011,
				9.8605,
				10.4872,
				11.0764,
				11.6214,
				12.1556,
				12.7868,
				13.5547,
				14.5115,
				0

			},
			{
				4.136,
				5.424,
				0.000,
				8.690,
				9.338,
				5.325,
				5.881,
				9.513,
				8.690,
				6.671,
				0.000,
				5.865,
				8.158,
				11.823,
				3.563,
				5.873,
				5.989,
				5.915,
				8.275
			}
		},
		{ // Yan D
			{
				0.407,
				0.578,
				1.093,
				1.460,
				1.738,
				2.295,
				3.038,
				3.911,
				4.718,
				5.437,
				6.086,
				6.693,
				7.275,
				7.837,
				8.379,
				8.897,
				9.374,
				9.828,
				10.231,
				10.603
			},
			{
				1.636,
				2.002,
				0.000,
				5.210,
				6.165,
				2.567,
				3.199,
				6.398,
				5.210,
				4.163,
				0.000,
				3.265,
				5.816,
				8.683,
				1.437,
				3.415,
				3.506,
				3.456,
				5.592
			}
		},
		{ // Dana A
			{
				0.779,
				1.114,
				1.966,
				2.302,
				2.520,
				2.912,
				3.344,
				3.795,
				4.202,
				4.572,
				4.917,
				5.246,
				5.560,
				5.861,
				6.163,
				6.490,
				6.874,
				7.344,
				7.910,
				8.615
			},
			{
				2.416,
				2.981,
				3.381,
				4.647,
				4.987,
				3.018,
				3.285,
				5.073,
				4.652,
				3.628,
				0.000,
				3.275,
				4.366,
				6.302,
				2.136,
				3.291,
				3.344,
				3.301,
				4.464

			}
		},
		{ // Dana B
			{
				0.776,
				1.127,
				2.469,
				3.453,
				4.237,
				5.768,
				7.879,
				10.435,
				12.831,
				14.941,
				16.861,
				18.638,
				20.339,
				21.975,
				23.564,
				25.125,
				26.600,
				27.960,
				29.229,
				30.427
			},
			{
				3.978,
				4.569,
				8.856,
				13.922,
				17.068,
				6.670,
				8.572,
				17.823,
				13.907,
				11.375,
				28.919,
				8.835,
				16.393,
				24.493,
				3.652,
				9.355,
				9.582,
				9.443,
				15.639
			}
		},
		{ // Dana C
			{
				1.382,
				2.161,
				3.9039,
				4.582,
				5.011,
				5.799,
				6.6926,
				7.5931,
				8.3924,
				9.1231,
				9.8141,
				10.4735,
				11.1104,
				11.736,
				12.3647,
				13.0383,
				13.7986,
				14.6983,
				14.9247,
				0.0
			},
			{
				4.803,
				5.984,
				6.745,
				9.299,
				9.959,
				6.010,
				6.558,
				10.117,
				9.299,
				7.277,
				0.000,
				6.558,
				8.729,
				12.668,
				4.262,
				6.558,
				6.670,
				6.600,
				8.901

			}
		},
		{ // Dana D
			{
				0.389,
				0.578,
				1.194,
				1.607,
				1.914,
				2.492,
				3.247,
				4.127,
				4.942,
				5.663,
				6.316,
				6.928,
				7.513,
				8.083,
				8.636,
				9.164,
				9.653,
				10.099,
				10.499,
				10.895
			},
			{
				1.800,
				2.094,
				3.556,
				5.399,
				6.410,
				2.799,
				3.432,
				6.649,
				5.399,
				4.374,
				0.000,
				3.485,
				6.030,
				8.946,
				1.631,
				3.648,
				3.730,
				3.676,
				5.839

			}
		},
		{ // Emma A
			{
				0.7542,
				1.0684,
				2.0833,
				0.0000,
				2.6985,
				3.1081,
				3.5636,
				4.06,
				4.507,
				4.8967,
				5.2636,
				5.6198,
				5.9645,
				6.3049,
				6.6577,
				7.0492,
				7.4979,
				8.0321,
				8.6682,
				9.4548
			},
			{
				2.5857,
				3.1161,
				0,
				4.9782,
				5.3522,
				3.2305,
				3.5122,
				5.4429,
				0,
				3.8684,
				0,
				3.5036,
				4.6669,
				6.8315,
				2.3272,
				3.5068,
				3.5603,
				3.5166,
				4.7918

			}
		},
		{ // Emma B
			{
				0.7506,
				1.0599,
				2.4134,
				0,
				4.2608,
				5.7818,
				7.8495,
				10.3823,
				12.7632,
				14.8775,
				16.8599,
				18.8308,
				20.6476,
				22.3599,
				24.016,
				25.6235,
				27.1344,
				28.5781,
				29.9179,
				31.1739

			},
			{
				3.967,
				4.501,
				8.930,
				0.000,
				17.136,
				6.733,
				8.560,
				17.998,
				0.000,
				11.179,
				0.000,
				8.810,
				16.110,
				25.007,
				3.717,
				9.292,
				9.525,
				9.370,
				15.567

			}
		},
		{ // Emma C
			{
				1.509,
				2.099,
				4.032,
				4.752,
				5.180,
				6.006,
				6.962,
				7.970,
				8.872,
				9.662,
				10.425,
				11.169,
				11.893,
				12.610,
				13.346,
				14.173,
				15.134,
				16.244,
				17.611,
				0.0//18.391
			},
			{
				4.995,
				6.090,
				7.072,
				0.000,
				10.589,
				6.236,
				6.805,
				10.805,
				0.000,
				7.598,
				0.000,
				6.822,
				9.202,
				13.744,
				4.443,
				6.822,
				6.943,
				6.840,
				9.434

			}
		},
		{ // Emma D
			{
				0.376,
				0.547,
				1.255,
				1.740,
				2.042,
				2.624,
				3.383,
				4.239,
				5.037,
				5.760,
				6.464,
				7.099,
				7.716,
				8.290,
				8.860,
				9.400,
				9.873,
				10.371,
				10.799,
				11.252
			},
			{
				1.909,
				2.167,
				3.719,
				0.000,
				6.607,
				2.960,
				0.000,
				6.839,
				17.561,
				4.408,
				0.000,
				3.607,
				6.064,
				9.175,
				1.771,
				3.736,
				3.822,
				3.753,
				5.951

			}
		},
		{ // Corey A - Replaced these with the retention times from the second file.
			{
				0,
				1.0114,
				1.4369,
				1.717,
				1.9102,
				2.2809,
				2.7171,
				3.1754,
				3.5887,
				3.9678,
				4.3283,
				4.6755,
				5.0069,
				5.3214,
				5.6154,
				5.8945,
				6.1953,
				6.557,
				7.009,
				7.5843
			},
			{
				1.8015,
				2.2757,
				2.7513,
				4.0269,
				4.4026,
				2.3741,
				2.6515,
				4.4951,
				0.0,
				2.9924,
				6.8105,
				2.6414,
				3.7233,
				5.734,
				1.5161,
				2.6523,
				2.7079,
				2.6681,
				3.8669
			}
		},
		{ // Corey B
			{
				0,
				1.0533,
				2.0769,
				2.9444,
				3.6296,
				5.0687,
				7.0925,
				9.5903,
				11.9693,
				14.094,
				16.0076,
				17.7862,
				19.4854,
				21.1392,
				22.7542,
				24.3244,
				25.8262,
				27.2396,
				28.544,
				29.733
			},
			{
				3.381,
				3.720,
				0.000,
				0.000,
				16.199,
				5.869,
				7.751,
				16.960,
				0.000,
				10.427,
				28.217,
				7.997,
				15.337,
				23.708,
				2.997,
				8.517,
				8.751,
				8.605,
				14.798

			}
		},
		{ // Corey C
			{
				0,
				2.0036,
				2.8731,
				3.4331,
				3.8198,
				4.5623,
				5.4403,
				6.3597,
				7.1857,
				7.9408,
				8.6512,
				9.3341,
				9.9922,
				10.6199,
				11.2116,
				11.7727,
				12.3671,
				13.0924,
				13.9865,
				15.1332
			},
			{
				3.6063,
				4.6009,
				5.4992,
				8.0842,
				8.7963,
				4.7446,
				5.2983,
				8.9738,
				8.0753,
				5.971,
				13.595,
				5.2835,
				7.4278,
				11.454,
				3.0272,
				5.295,
				5.4046,
				5.3244,
				7.7228

			}
		},
		{ // Corey D
			{
				0,
				0.5283,
				0.9722,
				1.3256,
				1.5884,
				2.1232,
				2.8495,
				3.7111,
				4.5136,
				5.2289,
				5.8833,
				6.4941,
				7.079,
				7.6478,
				8.1993,
				8.726,
				9.2248,
				9.6871,
				10.1074,
				10.4882
			},
			{
				1.479,
				1.691,
				3.134,
				0.000,
				5.968,
				2.388,
				3.017,
				6.212,
				0.000,
				3.905,
				9.996,
				3.077,
				5.509,
				8.509,
				1.286,
				3.236,
				3.320,
				3.268,
				5.406

			}
		},
		{ // David A
			{
				0.7601,
				1.0688,
				1.502,
				1.7817,
				1.9783,
				2.3516,
				2.7897,
				3.2551,
				3.6749,
				4.0564,
				4.4135,
				4.7518,
				5.0764,
				5.3808,
				5.6622,
				5.9214,
				6.21,
				6.5642,
				7.0092,
				7.5694
			},
			{
				1.8726553,
				2.528419865,
				2.822211948,
				4.144277943,
				4.49,
				2.447352779,
				2.723441398,
				4.57248279,
				4.144773696,
				3.124032136,
				0,
				2.716939642,
				3.902948879,
				5.77526471,
				1.582111931,
				2.72771856,
				2.78150312,
				2.747135729,
				3.95375817

			}
		},
		
		{ // David C
			{
				1.5018,
				2.1052,
				3.0073,
				3.5687,
				3.9598,
				4.7059,
				5.5837,
				6.5158,
				7.3489,
				8.1076,
				8.8142,
				9.4877,
				10.132,
				10.7418,
				11.3089,
				11.8291,
				12.4068,
				13.1128,
				14.0002,
				0.0
			},
			{
				3.750,
				5.063,
				5.638,
				8.293,
				8.957,
				4.895,
				5.442,
				9.130,
				8.291,
				6.238,
				0.000,
				5.425,
				7.773,
				11.534,
				3.165,
				5.440,
				5.548,
				5.472,
				7.887

			}
		},
		{ // David D
			{
				0.3906,
				0.5521,
				1.008,
				1.3591,
				1.6247,
				2.1631,
				2.8918,
				3.7538,
				4.5584,
				5.272,
				5.9263,
				6.5394,
				7.1225,
				7.6919,
				8.241,
				8.7647,
				9.251,
				9.7089,
				10.119,
				10.4949,
			},
			{
				1.517,
				1.884,
				3.165,
				5.030,
				6.009,
				2.432,
				3.054,
				6.250,
				5.038,
				4.003,
				0.000,
				3.115,
				5.660,
				8.547,
				1.316,
				3.272,
				3.357,
				3.304,
				5.445

			}
		},
		{ // Dwight A
			{
				0.8175,
				1.1327,
				1.6047,
				1.891,
				2.095,
				2.4741,
				2.926,
				3.3757,
				3.7847,
				4.1541,
				4.4998,
				4.8268,
				5.1371,
				5.4291,
				5.7015,
				5.9643,
				6.2744,
				6.6538,
				7.1204,
				7.7203
			},
			{
				1.99,
				2.626,
				0,
				4.241,
				4.567,
				0,
				2.862,
				4.6534,
				4.241,
				3.133,
				0,
				2.821,
				3.848,
				5.8,
				1.689,
				2.865,
				2.9,
				2.878,
				4.05,

			}
		},
		{ // Dwight B
			{
				0.8146,
				1.1529,
				2.2337,
				3.1243,
				3.839,
				5.3169,
				7.3826,
				9.9046,
				12.2911,
				14.4084,
				16.3278,
				18.1004,
				19.7956,
				21.4331,
				23.0304,
				24.5733,
				26.0468,
				0.0,
				0.0,
				0.0
			},
			{
				3.597,
				4.276,
				0,
				13.428,
				16.499,
				0,
				8.028,
				17.265,
				13.431,
				10.52,
				0,
				8.282,
				15.411,
				23.964,
				3.188,
				8.809,
				9.0455,
				8.903,
				15.089

			}
		},
		{ // Dwight C
			{
				1.6117,
				2.2442,
				3.1891,
				3.7663,
				4.1709,
				4.9332,
				5.8315,
				6.7319,
				7.5501,
				8.2888,
				8.9849,
				9.6417,
				10.2649,
				10.8515,
				11.3912,
				11.9141,
				12.5286,
			},
			{
				3.956,
				5.242,
				0,
				0,
				9.13,
				0,
				0,
				9.293,
				8.474,
				6.241,
				0,
				0,
				7.677,
				11.594,
				3.36,
				5.7,
				5.766,
				5.724,
				8.066

			}
		},
		{ // Dwight D
			{
				0.4083,
				0.5782,
				1.0623,
				1.4232,
				1.7,
				2.2532,
				2.9934,
				3.8643,
				4.6719,
				5.3885,
				6.0402,
				6.6487,
				7.2278,
				7.7869,
				8.3259,
				8.8404,
				9.3218,
				9.7667,
				10.1688,
				10.5375
			},
			{
				1.594,
				1.947,
				0,
				5.154,
				6.118,
				0,
				3.151,
				6.358,
				5.154,
				3.983,
				0,
				3.212,
				5.584,
				8.629,
				1.385,
				3.375,
				3.461,
				3.411,
				5.549

			}
		},
		{ // Yamil A
			{
				0.7449,
				1.0583,
				1.5837,
				1.8888,
				2.0887,
				2.4688,
				2.92,
				3.3748,
				3.7873,
				4.1601,
				4.5089,
				4.8377,
				5.1514,
				5.4473,
				5.7237,
				5.9943,
				6.3171,
				6.7167,
				7.2113,
				7.8432,
			},
			{
				1.974,
				2.6212,
				2.9405,
				4.2469,
				4.5742,
				2.5576,
				2.8401,
				4.6591,
				4.2468,
				3.1825,
				7.0368,
				2.8285,
				3.9466,
				5.8325,
				1.6713,
				2.8331,
				2.8942,
				2.858,
				4.0457


			}
		},
		{ // Yamil B
			{
				0.7376,
				1.0498,
				2.1444,
				3.0652,
				3.7817,
				5.2703,
				7.3466,
				9.8841,
				12.282,
				14.4087,
				16.3327,
				18.112,
				19.813,
				21.4601,
				23.0688,
				24.6209,
				26.1041,
				27.4964,
				28.7783,
				29.9363,
			},
			{
				3.5546,
				4.1786,
				8.3489,
				13.348,
				16.539,
				6.1258,
				8.0678,
				17.284,
				13.365,
				10.831,
				28.458,
				8.3003,
				15.835,
				24.011,
				3.1764,
				8.8644,
				9.0982,
				9.0098,
				15.072

			}
		},
		{ // Yamil C
			{
				1.468,
				2.083,
				3.135,
				3.746,
				4.1461,
				4.908,
				5.805,
				6.722,
				7.542,
				8.288,
				8.985,
				9.645,
				10.277,
				10.872,
				11.426,
				11.964,
				12.6136,
				13.403,
				14.37,
				15.623
			},
			{
				3.9176,
				5.2305,
				5.8407,
				8.4652,
				9.1153,
				5.0811,
				5.6395,
				9.2848,
				8.4646,
				6.3209,
				14.026,
				5.6143,
				7.8431,
				11.641,
				3.3005,
				5.6203,
				5.7436,
				5.6698,
				8.0506

			}
		},
		{ // Yamil D
			{
				0.3749,
				0.5419,
				1.0413,
				1.4112,
				1.6882,
				2.2447,
				2.9874,
				3.8618,
				4.6679,
				5.383,
				6.0362,
				6.6425,
				7.225,
				7.7877,
				8.3293,
				8.8447,
				9.3285,
				9.778,
				10.1772,
				10.5525,
			},
			{
				1.5889,
				1.8957,
				3.2866,
				5.139,
				6.1242,
				2.5218,
				3.1707,
				6.3611,
				5.1388,
				4.1011,
				10.071,
				3.2286,
				5.7334,
				8.6344,
				1.4032,
				3.3879,
				3.4708,
				3.4405,
				5.5395

			}
		},
	};
	
	public static String[] StationaryPhaseArray = {
		"Agilent Eclipse Plus C18 (3.5 \u00b5m particle size)"
		};
		
		public static String[] StandardCompoundsNameArray = {
			"N-methylacetamide",
			"N-ethylacetamide",
			"N,N-dimethylpropionamide",
			"benzamide",
			"N-methylbenzamide",
			"N-ethylbenzamide",
			"N-propylbenzamide",
			"N-butylbenzamide",
			"N-pentylbenzamide",
			"N-hexylbenzamide",
			"N-heptylbenzamide",
			"N-octylbenzamide",
			"N-nonylbenzamide",
			"N-decylbenzamide",
			"N-undecylbenzamide",
			"N-dodecylbenzamide",
			"N-tridecylbenzamide",
			"N-tetradecylbenzamide",
			"N-pentadecylbenzamide",
			"N-hexadecylbenzamide"
		};
		
		public static double[][] StandardCompoundsMZArray = {
			{74.06059},
			{88.07624},
			{102.09189},
			{122.06059},
			{136.07624},
			{150.09189},
			{164.10754},
			{178.12319},
			{192.13884},
			{206.15449},
			{220.17014},
			{234.18579},
			{248.20144},
			{262.21709},
			{276.23274},
			{290.24839},
			{304.26404},
			{318.27969},
			{332.29534},
			{346.31099}
		};
		
		public static double[][][] StandardIsocraticDataArray = {
			//JH updated 2014.10.26 with 3.5 uM particle predictions 2014.07.07
			{{ .05, -0.6217695800}, { .1, -0.879085055}, { .2, -1.176322821}},
			{{ .05, -0.0918575720}, { .1, -0.372912003}, { .2, -0.693449237}},
			{{ .05, 0.5688479320}, { .1, 0.223361596}, { .2, -0.220154391}, { .3, -0.448126358}, { .4, -0.588831726}, { .5, -0.674747927}},
			{{ .05, 0.8556470120}, { .1, 0.532407590}, { .2, 0.056165045}, { .3, -0.254306332}, { .4, -0.463892989}, { .5, -0.624256935}},
			{{ .05, 1.0670677710}, { .1, 0.718030354}, { .2, 0.235969688}, { .3, -0.075329385}, { .4, -0.295100969}, { .5, -0.455285417}, { .6, -0.611267993}, { .7, -0.711995984}},
			{{ .05, 1.4227941770}, { .1, 1.047723165}, { .2, 0.532607715}, { .3, 0.195172067}, { .4, -0.053115756}, { .5, -0.252513478}, { .6, -0.424957569}, { .7, -0.564942933}},
			{{ .05, 1.8678732680}, { .1, 1.450638936}, { .2, 0.887085604}, { .3, 0.491938539}, { .4, 0.191725595}, { .5, -0.034280104}, { .6, -0.245512668}, { .7, -0.424127435}},
			{{ .1, 1.9503886390}, { .2, 1.302589818}, { .3, 0.826860882}, { .4, 0.462963720}, { .5, 0.187840845}, { .6, -0.054104651}, { .7, -0.266229181}, { .8, -0.473672500}},
			{{ .2, 1.7420430730}, { .3, 1.176735613}, { .4, 0.735450730}, { .5, 0.410830974}, { .6, 0.129094696}, { .7, -0.105101496}, { .8, -0.325446419}, { .9, -0.482287095}},
			{{ .3, 1.5312370380}, { .4, 1.011051346}, { .5, 0.636570406}, { .6, 0.316322322}, { .7, 0.057425435}, { .8, -0.180066522}, { .9, -0.374381698}},
			{{ .3, 1.8834749000}, { .4, 1.289690070}, { .5, 0.868128637}, { .6, 0.510947885}, { .7, 0.223105026}, { .8, -0.037698636}, { .9, -0.260438346}},
			{{ .4, 1.5710361210}, { .5, 1.099018486}, { .6, 0.702749789}, { .7, 0.394402978}, { .8, 0.102805504}, { .9, -0.138853251}},
			{{ .4, 1.8494996210}, { .5, 1.331278294}, { .6, 0.900137859}, { .7, 0.560572939}, { .8, 0.254474852}, { .9, -0.012653862}},
			{{ .4, 2.1275890080}, { .5, 1.558178596}, { .6, 1.101441823}, { .7, 0.735855993}, { .8, 0.406268528}, { .9, 0.111339728}},
			{{ .5, 1.7934982140}, { .6, 1.301978030}, { .7, 0.908621679}, { .8, 0.559273896}, { .9, 0.240515518}},
			{{ .6, 1.5055294410}, { .7, 1.088680067}, { .8, 0.716421684}, { .9, 0.367557380}},
			{{ .6, 1.7041024980}, { .7, 1.260924947}, { .8, 0.867241921}, { .9, 0.492496116}},
			{{ .6, 1.9041327110}, { .7, 1.441113247}, { .8, 1.024754878}, { .9, 0.618613400}},
			{{ .6, 2.1056590330}, { .7, 1.621767004}, { .8, 1.178393469}, { .9, 0.752723100}},
			{{ .7, 1.8023931580}, { .8, 1.336970031}, { .9, 0.878471333}},		
			};
		
		public static String[] TestCompoundNameArray = {
			//JH updated 2014.08.22-ordered in elution (sort of) 
			/*"Chlorogenic acid",
			"Diethyacetamide",
			"N-allyl aniline",
			"Amino-coumarin",
			"Naphthalene acetamide",
			//"Naphthalene diol", 
			"Abscisic acid",
			"prednisone",
			"hydrocortisone",
			"cortisone",
			"tetrabutylammonium",
			//"p-coumaric acid",
			"anilinoacetaldehyde diethyl acetal",
			"curcumin",
			"tetrapentylammonium",
			"diphenylamine",
			"2-phenylindole",
			"Di-n-pentyl phthalate",
			"Caffeine",
			*/
			//Order for old data
			
			
			"Diethyacetamide",
			"N-allyl aniline",
			"Naphthalene diol",
			"diphenylamine",
			"coumarin",
			"naphthalene acetamide",
			"2-phenylindole",
			"anilinoacetaldehyde diethyl acetal",
			"tetrabutylammonium",
			"Abscisic acid",
			"tetrapentylammonium",
			"prednisone",
			"cortisone",
			"hydrocortisone",
			"curcumin",
			"Chlorogenic acid",
			"p-coumaric acid",
			"Di-n-pentyl phthalate",
			"Caffeine",
			
			
			//The LOPAC 16 compounds 
			/*
			"Cyclobenzaprine hydrochloride",
			"7-Chloro-4-hydroxy-2-phenyl-1,8-naphthyridine",
			"Clomipramine hydrochloride",
			"N6-Cyclopentyladenosine",
			"Cinoxacin",
			"Colchicine",
			"DL-p-Chlorophenylalanine methyl ester hydrochloride",
			"CNS-1102",
			"Carbetapentane citrate",
			"Cinnarizine",
			"Calcimycin",
			"Cantharidic Acid",
			*/
			
			
			
			
			
		};
		
		public static double[][] TestCompoundMZArray = {
			/*//2014.08.22 list of compounds
			{355.31}, //Chlorogenic acid
			{116.17},    //Diethyacetamide
			{134.09697}, //N-allyl aniline
			{176.04460}, //coumarin
			{186.22000}, //naphthalene acetamide
			{161.23},    //Naphthalene diol
			{265.32},     //Abscisic acid
			{359.18585}, // prednisone
			{363.21715}, // hydrocortisone
			{361.20150}, // cortisone
			{242.28423}, // tetrabutylammonium
			{165.16000}, //p-Coumaric acid
			{210.14940}, //anilinoacetaldehyde diethyl acetal
			{369.13381}, // curcumin
			{298.34683}, // tetrapentylammonium
			{170.09697}, //diphenylamine
			{194.09697}, //2-phenylindole
			{307.4}, //Di-n-pentyl phthalate
			//{195.19}, //Caffeine
			*/
			
			//Old order
			
			{116.17},    //Diethyacetamide
			{134.09697}, //N-allyl aniline
			{161.23},    //Naphthalene diol 
			{170.09697}, //diphenylamine
			{176.04460}, //coumarin
			{186.22000}, //naphthalene acetamide	
			{194.09697}, //2-phenylindole
			{210.14940}, //anilinoacetaldehyde diethyl acetal
			{242.28423}, // tetrabutylammonium
			{265.32},     //Abscisic acid 
			{298.34683}, // tetrapentylammonium
			{359.18585}, // prednisone
			{361.20150}, // cortisone
			{363.21715}, // hydrocortisone
			{369.13381}, // curcumin
			{355.31}, //Chlorogenic acid
			{165.16000}, //p-Coumaric acid
			{307.4}, //Di-n-pentyl phthalate
			{195.19}, //Caffeine
			
			
			//The LOPAC_16 Compounds
			/*{276.1674},
			{257.04034},
			{315.15497},
			{336.15936},
			{263.05896},
			{400.16818},
			{214.05566},
			{304.17355},
			{334.2304},
			{369.22525},
			{524.26825},
			{215.08412},
			*/
			
			
			
			
			
		};
		
		public static double[][][] TestCompoundsIsocraticDataArray = {
			//JH updated 2014.10.26 with 3.5 uM particle predictions 2014.08.22
			
			{{ .05, 1.0404098350}, { .1, 0.636938658}, { .2, 0.121218847}, { .3, -0.193608492}, { .4, -0.375756900}, { .5, -0.525233562}, { .6, -0.660486016}},
			{{ .05, 1.0432942450}, { .1, 0.783138041}, { .2, 0.534640298}, { .3, 0.396971682}, { .4, 0.291981867}, { .5, 0.187840845}, { .6, 0.071907744}, { .7, -0.072687936}, { .8, -0.246701431}, { .9, -0.429899026}},
			{{ .05, 2.0825998330}, { .1, 1.717346050}, { .2, 1.064924730}, { .3, 0.529954250}, { .4, 0.159356301}, { .5, -0.095591018}, { .6, -0.359456020}},
			{{ .3, 1.8420474280}, { .4, 1.315162100}, { .5, 0.909552311}, { .6, 0.555415797}, { .7, 0.257809230}, { .8, -0.002729080}},
			{{ .05, 1.7355623090}, { .1, 1.266046825}, { .2, 0.645845258}, { .3, 0.237055362}, { .4, -0.053115756}, { .5, -0.273252964}, { .6, -0.435176734}, { .7, -0.608651861}},
			{{ .1, 1.7426201970}, { .2, 1.004376380}, { .3, 0.457922337}, { .4, 0.077061820}, { .5, -0.172582802}, { .6, -0.377184787}},
			{{ .3, 2.0400717030}, { .4, 1.436200913}, { .5, 0.988009905}, { .6, 0.600538818}, { .7, 0.286055047}, { .8, 0.004673846}},
			{{ .2, 1.6945724600}, { .3, 1.304462219}, { .4, 0.960580284}, { .5, 0.678095115}, { .6, 0.411395992}, { .7, 0.170350113}, { .8, -0.066988012}},
			{{ .2, 1.5743398250}, { .3, 0.946544166}, { .4, 0.363799300}, { .5, -0.150680961}},
			{{ .1, 2.0209314870}, { .2, 1.053103027}, { .3, 0.456656787}, { .4, 0.047990372}, { .5, -0.232719418}, { .6, -0.467361417}, { .7, -0.711995984}},
			{{ .3, 2.1770735170}, { .4, 1.322148221}, { .5, 0.641768141}, { .6, 0.006031965}, { .7, -0.674747927}},
			{{ .2, 1.2333398400}, { .3, 0.476475943}, { .4, -0.001494991}, { .5, -0.310184082}, { .6, -0.567064331}, { .7, -0.674747927}},
			{{ .2, 1.2911964930}, { .3, 0.534215555}, { .4, 0.073926106}, { .5, -0.245814716}, { .6, -0.478642428}},
			{{ .3, 0.5310235030}, { .4, 0.086335364}, { .5, -0.295032738}, { .6, -0.567064331}},
			{{ .3, 1.8825727080}, { .4, 1.111294856}, { .5, 0.598332661}, { .6, 0.184612024}, { .7, -0.145373834}, { .8, -0.462769137}},
			{{ .05, 1.1224435470}, { .1, 0.471089795}, { .2, -0.404001114}, { .3, -0.975552731}},
			{{ .2, 1.6956235410}, { .3, 1.304821933}, { .4, 0.963430797}, { .5, 0.677302366}, { .6, 0.417245164}, { .7, 0.170350113}, { .8, -0.062680924}, { .9, -0.267171728}},
			{{ .6, 1.4214370890}, { .7, 1.016539498}, { .8, 0.636860145}, { .9, 0.263108031}},
			{{0.05, 1.171474265},{0.1, 0.543400412}, {0.2, -0.128628601}}, 
			};
			
			/*THis is the orginal Log K 
			{{0.2, 1.635779473372}, {0.3, 0.688032314419}, {0.4, -0.096049171335}, {0.5, -0.724275869601}},
			{{0.2, 1.279380165335}, {0.3, 0.698970004336}, {0.4, 0.287019281221}, {0.5, -0.001172185548}},
			{{0.2, 2.108780901013}, {0.3, 1.071328632158}, {0.4, 0.217692789845}, {0.5, -0.341487205001}},
			{{0.05, 1.643182172284}, {0.1, 0.93262317322}, {0.2, 0.045215638361}, {0.3, -0.514705297366}, {0.4, -0.778151250384}},
			{{0.05, 2.103499125531}, {0.1, 1.49069564895}, {0.2, 0.704137674413}, {0.3, 0.231638588942}, {0.4, -0.087533320412}, {0.5, -0.238960136266}, },
			{{0.2, 1.095478057082}, {0.3, 0.295937233283}, {0.4, -0.231138825387}, {0.5, -0.390396962322}},
			{{0.05, 1.552318119776}, {0.1, 1.049199601238}, {0.2, 0.232546198872}, {0.3, -0.416325589277}, {0.4, -0.845098040014}},
			{{0.2, 1.67929646321}, {0.3, 0.824695608346}, {0.4, 0.089961153053}},
			{{0.2, 1.698644974149}, {0.3, 0.776083625054}, {0.4, 0.013572807189}},
			{{0.3, 1.573520915739}, {0.4, 0.628794244575}, {0.5, -0.01914555656}, {0.6, -0.399709031411}},
			{{0.5, 2.184699081764}, {0.6, 1.67299841706}, {0.7, 1.227554992181}, {0.8, 0.827512865213}, {0.9, 0.432528985775}},
			{{0.1, 1.048369827004}, {0.2, 0.2438109524}, {0.3, -0.416325589277}, {0.4, -0.845098040014}},
			*/
			//This is Log K data collected re-collected on the origial column after lots of use
			/*
			{{0.2, 1.630088714928}, {0.3, 0.714303558757}, {0.4, -0.059997929675}, {0.5, -0.651421606157}},
			{{0.2, 1.282374898139}, {0.3, 0.692130579806}, {0.4, 0.295744399202}, {0.5, 0.044319428048}},
			{{0.2, 2.107209969648}, {0.3, 1.093640528443}, {0.4, 0.262604172031}, {0.5, -0.311933358674}},
			{{0.05, 1.65922749431}, {0.1, 0.933555094901}, {0.2, 0.046743403542}, {0.3, -0.550907468881}, {0.4, -0.771202390428}},
			{{0.05, 2.118618158647}, {0.1, 1.491797177558}, {0.2, 0.70420253127}, {0.3, 0.221169633791}, {0.4, -0.0848215134}, {0.5, -0.185158279026}},
			{{0.2, 1.093739966219}, {0.3, 0.288989377448}, {0.4, -0.212608092881}, {0.5, -0.429572856541}},
			{{0.05, 1.546202173863}, {0.1, 1.035113619416}, {0.2, 0.24678198982}, {0.3, -0.453997455873}, {0.4, -0.862972763784}},
			{{0.2, 1.677524000857}, {0.3, 0.843641489241}, {0.4, 0.124062259052}, {0.5, -0.43933269383}},
			{{0.2, 1.689255029862}, {0.3, 0.800738551964}, {0.4, 0.046457401239}, {0.5, -0.5030017737}},
			{{0.3, 1.589844922625}, {0.4, 0.670006308401}, {0.5, 9.643274665533E-17}, {0.6, -0.493049212679}},
			{{0.5, 2.203513880626}, {0.6, 1.666611309201}, {0.7, 1.223483174041}, {0.8, 0.834171816392}, {0.9, 0.447913983634}},
			{{0.1, 1.033096545323}, {0.2, 0.241153904812}, {0.3, -0.453997455873}, {0.4, -0.838149180059}},
		};
			*/
		
		public static String[] OtherCompoundsNameArray = {
			//This is where the Data for the predicted compopunds goes (i.e. the second window)
			/*"N,N-diethylacetamide",
			"N-allyl aniline",
			"1,3-naphthalenediol",
			"p-coumaric acid",
			"diphenylamine",
			"7-amino-4-methylcoumarin",
			"naphthalene acetamide",
			"2-phenylindole",
			"anilinoacetaldehyde diethyl acetal",
			"tetrabutylammonium",
			"dodecanophenone",
			"abscisic acid",
			"tetrapentylammonium",
			"di-n-pentyl phthalate",
			"chlorogenic acid",
			"prednisone",
			"cortisone",
			"hydrocortisone",
			//"curcumin",
			"caffeine",
			*/
			
			"Acephate",
			"Azaconazole",
			"Azinphos-ethyl",
			"Azinphos-methyl",
			"Buprofezin",
			"Cycloate",
			"Cymiazol",
			"Cyproconazole",
			"Diflufenican",
			"Dimethachlor",
			"Dimoxystrobin",
			"Fenamiphos",
			"Flufenacet",
			"Fluopicolide",
			"Fosthiazate",
			"Isofenphos-methyl",
			"Isoprothiolane",
			"Lenacil",
			"Methamidophos",
			"Myclobutanil",
			"Prochloraz",
			"Proquinazid",
			"Spirodiclofen",
			"Spiroxamine",

			
		};

		public static double[][][] OtherCompoundsIsocraticDataArray = {
		
			{{0.05, 0.20016079366}, {0.1, -0.037596011792}, {0.2, -0.535753282111}, {0.3, -0.763193935631}},
			{{0.2, 1.792554140419}, {0.3, 1.151859460402}, {0.4, 0.646730386247}, {0.5, 0.289909472482}, {0.6, 0.029555243562}, {0.7, -0.180382135701}, {0.8, -0.350974465922}},
			{{0.3, 2.148304913125}, {0.4, 1.485129663913}, {0.5, 0.975793118415}, {0.6, 0.594034420707}, {0.7, 0.276565066251}, {0.8, 0.006006935071}},
			{{0.3, 1.622942595088}, {0.4, 1.066015160067}, {0.5, 0.635223869527}, {0.6, 0.301029995664}, {0.7, 0.023737846955}},
			{{0.2, 2.165982767654}, {0.3, 1.681338776844}, {0.4, 1.282168778305}, {0.5, 0.969557254436}, {0.6, 0.722541233497}, {0.7, 0.506976026484}, {0.8, 0.302840816141}, {0.9, 0.064706821061}},
			{{0.4, 1.69708397222}, {0.5, 1.246924378709}, {0.6, 0.907199339891}, {0.7, 0.622318825164}, {0.8, 0.372788961752}, {0.9, 0.133574290217}},
			{{0.05, 1.866003570159}, {0.1, 1.43022455316}, {0.2, 0.569229068342}, {0.3, -0.049545915839}, {0.4, -0.616783248149}},
			{{0.4, 1.01772876696}, {0.5, 0.586852700193}, {0.6, 0.27843154348}, {0.7, 0.034010731536}, {0.8, -0.151973927403}, {0.9, -0.311994534092}},
			{{0.4, 2.027960859785}, {0.5, 1.399498716427}, {0.6, 0.937051463388}, {0.7, 0.555420546506}, {0.8, 0.22160673541}, {0.9, -0.104188861859}},
			{{0.2, 1.909589111203}, {0.3, 1.327758133767}, {0.4, 0.85329251863}, {0.5, 0.491912280048}, {0.6, 0.218409748193}, {0.7, -0.090552155216}, {0.8, -0.20678958553}, {0.9, -0.358850114951}},
			{{0.3, 2.16932739082}, {0.4, 1.472268751925}, {0.5, 0.953156772669}, {0.6, 0.572969721977}, {0.7, 0.258782520022}, {0.8, -0.012269021619}, {0.9, -0.256477206242}},
			{{0.3, 1.82955516337}, {0.4, 1.151012132821}, {0.5, 0.675665084616}, {0.6, 0.336262372117}, {0.7, 0.066598098739}, {0.8, -0.162397495319}, {0.9, -0.375663613961}},
			{{0.3, 2.109508505056}, {0.4, 1.463395230213}, {0.5, 0.959229033059}, {0.6, 0.575903054207}, {0.7, 0.250639259909}, {0.8, -0.031347981767}, {0.9, -0.276473834658}},
			{{0.3, 1.918908815284}, {0.4, 1.310516302159}, {0.5, 0.826220441361}, {0.6, 0.455381092305}, {0.7, 0.141396921304}, {0.8, -0.117343885758}, {0.9, -0.384320933493}},
			{{0.2, 1.656532862041}, {0.3, 1.07693177067}, {0.4, 0.623249290398}, {0.5, 0.280419776308}, {0.6, 0.026112997151}, {0.7, -0.191614515633}, {0.8, -0.376117501285}, {0.9, -0.553185828123}},
			{{0.5, 1.628647191007}, {0.6, 1.194221104392}, {0.7, 0.836473469001}, {0.8, 0.52008740604}, {0.9, 0.211130899342}},
			{{0.3, 1.941586430602}, {0.4, 1.34814254031}, {0.5, 0.894776403805}, {0.6, 0.550831001853}},
			{{0.2, 1.391898650942}, {0.3, 0.823850206746}, {0.4, 0.396489942277}, {0.5, 0.096910013008}, {0.6, -0.130272604565}, {0.7, -0.315921551065}, {0.8, -0.461672763416}},
			{{0.05, -0.078977877052}, {0.1, -0.22008690346}, {0.2, -0.597605649902}, {0.3, -0.805945916052}},
			{{0.3, 1.820783715093}, {0.4, 1.160868526065}, {0.5, 0.68859977414}, {0.6, 0.347948130443}, {0.7, 0.072832097863}, {0.8, -0.146854483266}, {0.9, -0.375663613961}},
			{{0.3, 1.591814347367}, {0.4, 0.948168361727}, {0.5, 0.506976026484}, {0.6, 0.20488391334}, {0.7, -0.031622004197}, {0.8, -0.212671767756}, {0.9, -0.358850114951}},
			{{0.5, 1.735186080744}, {0.6, 1.319355354658}, {0.7, 0.974630693829}, {0.8, 0.669697507914}, {0.9, 0.372422358179}},
			{{0.5, 2.088693412463}, {0.6, 1.551656134112}, {0.7, 1.109889342033}, {0.8, 0.714651924552}, {0.9, 0.313481611855}},
			{{0.3, 1.270481074987}, {0.4, 0.49831055379}, {0.5, -0.123315203944}, {0.6, -0.698970004336}},


		};
	
	
	public static double roundToSignificantFigures(double num, int n) 
	{
	    if (num == 0) 
	    {
	        return 0;
	    }

	    final double d = Math.ceil(Math.log10(num < 0 ? -num: num));
	    final int power = n - (int) d;

	    final double magnitude = Math.pow(10, power);
	    final long shifted = Math.round(num * magnitude);
	    
	    return shifted / magnitude;
	}
}
