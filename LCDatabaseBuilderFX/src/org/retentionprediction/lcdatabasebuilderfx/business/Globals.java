package org.retentionprediction.lcdatabasebuilderfx.business;

//the data Josh sent me on 27th so the 0.159 is the correct deadtime

public class Globals
{
	public static double dRefColumnID = .21;
	public static double dRefColumnLength = 15;
	public static double dRefFlowRate = 0.4;
	
	// For a 2.1 x 150 mm column at 400 uL/min
	// 2015.03.04
	public static double[][] dDeadTimeArray = {
		{ 0.05, 0.827133333},
		{ 0.1, 0.7968},
		{ 0.2, 0.756466667},
		{ 0.3, 0.7258},
		{ 0.4, 0.705466667},
		{ 0.5, 0.6908},
		{ 0.6, 0.684133333},
		{ 0.7, 0.6898},
		{ 0.8, 0.693133333},
		{ 0.90, 0.693466667},
		{ 0.95, 0.700466667},
	};
	
	public static double[][][] dGradientPrograms = 
	{
			{
				{
					0,5.0
				},
				{
					60,77.5
				}
			},
			{
				{
					0,5.0
				},
				{
					40,77.5
				}
			},
			{
				{
					0,10
				},
				{
					30,80
				}
			},
			{
				{
					0,20
				},
				{
					20,82.5
				}
			},
			{
				{
					0,30
				},
				{
					15,85
				}
			},
			{
				{
					0,40
				},
				{
					10,87.5
				}
			},
			{
				{
					0,50
				},
				{
					7,90
				}
			},
			{
				{
					0,60
				},
				{
					3,92.5
				}
			},
		
	};	
	
	public static String[] StationaryPhaseArray = {
		"Agilent Eclipse Plus C18 (3.5 \u00b5m particle size)"
		};
		
		public static String[] StandardCompoundsNameArray = {
			"N-methylacetamide",
			"N-ethylacetamide",
			"N,N-dimethylpropionamide",
			"benzamide",
			"N-methylbenzamide",
			"N-ethylbenzamide",
			"N-propylbenzamide",
			"N-butylbenzamide",
			"N-pentylbenzamide",
			"N-hexylbenzamide",
			"N-heptylbenzamide",
			"N-octylbenzamide",
			"N-nonylbenzamide",
			"N-decylbenzamide",
			"N-undecylbenzamide",
			"N-dodecylbenzamide",
			"N-tridecylbenzamide",
			"N-tetradecylbenzamide",
			"N-pentadecylbenzamide",
			"N-hexadecylbenzamide"
		};
		
		public static double[][] StandardCompoundsMZArray = {
			{74.06059},
			{88.07624},
			{102.09189},
			{122.06059},
			{136.07624},
			{150.09189},
			{164.10754},
			{178.12319},
			{192.13884},
			{206.15449},
			{220.17014},
			{234.18579},
			{248.20144},
			{262.21709},
			{276.23274},
			{290.24839},
			{304.26404},
			{318.27969},
			{332.29534},
			{346.31099}
		};
		
		public static double[][][] StandardIsocraticDataArray = {
			//{{ .95, -10}, {.05, -10}}, 
			{{0.05, -0.464767217807}, {0.1, -0.678632854268}, {0.2, -0.844027689548}, {0.3, -0.878545730825}, {0.4, -0.897462958831}},
			{{0.05, -0.035240757771}, {0.1, -0.286452109383}, {0.2, -0.490807075886}, {0.3, -0.595999140855}, {0.4, -0.65721183617}, {0.5, -0.7090185604}},
			{{0.05, 0.592522452016}, {0.1, 0.250939018967}, {0.2, -0.148546013058}, {0.3, -0.343621065915}, {0.4, -0.44822640699}, {0.5, -0.50691386898}, {0.6, -0.537015746243}},
			{{0.05, 0.864012322678}, {0.1, 0.553800195764}, {0.2, 0.102273385044}, {0.3, -0.17597160222}, {0.4, -0.348331540433}, {0.5, -0.455536962915}, {0.6, -0.526220795741}},
			{{0.05, 1.076990899595}, {0.1, 0.736740396569}, {0.2, 0.272682205325}, {0.3, -0.015098945898}, {0.4, -0.201746111893}, {0.5, -0.322156430945}, {0.6, -0.409172018991}},
			{{0.05, 1.430605980128}, {0.1, 1.064181618207}, {0.2, 0.566243274704}, {0.3, 0.239898122709}, {0.4, 0.01026115846}, {0.5, -0.155405198144}, {0.6, -0.276832267799}, {0.7, -0.417119263162}, {0.8, -0.511080010117}},
			{{0.05, 1.875891231143}, {0.1, 1.470991830987}, {0.2, 0.911307626093}, {0.3, 0.526928695744}, {0.4, 0.242603971207}, {0.5, 0.026343731021}, {0.6, -0.139951037461}, {0.7, -0.312383912642}, {0.8, -0.428076318378}},
			{{0.1, 1.972308348771}, {0.2, 1.327613269079}, {0.3, 0.860251337933}, {0.4, 0.504156166065}, {0.5, 0.231792961556}, {0.6, 0.019570038453}, {0.7, -0.178806989962}, {0.8, -0.328043475917}, {0.9, -0.415600065789}, {0.95, -0.479275949823}},
			{{0.2, 1.764014244926}, {0.3, 1.205844338436}, {0.4, 0.77377207353}, {0.5, 0.443043175847}, {0.6, 0.187150119689}, {0.7, -0.043538600349}, {0.8, -0.218948400235}, {0.9, -0.347799968873}, {0.95, -0.419961948608}},
			{{0.3, 1.558543905857}, {0.4, 1.049168917425}, {0.5, 0.661158581631}, {0.6, 0.363149687732}, {0.7, 0.108220080666}, {0.8, -0.093664025342}, {0.9, -0.244062156075}, {0.95, -0.337082253839}},
			{{0.3, 1.914567723395}, {0.4, 1.329588720719}, {0.5, 0.886232643375}, {0.6, 0.547356572789}, {0.7, 0.264396063514}, {0.8, 0.032309978698}, {0.9, -0.142635031739}, {0.95, -0.231193568224}},
			{{0.4, 1.610377814759}, {0.5, 1.114117414358}, {0.6, 0.736878457176}, {0.7, 0.425858539207}, {0.8, 0.164220655775}, {0.9, -0.050505862757}, {0.95, -0.151367576893}},
			{{0.4, 1.891209217441}, {0.5, 1.344827866452}, {0.6, 0.931470358569}, {0.7, 0.592962154655}, {0.8, 0.304897439885}, {0.9, 0.059523594232}, {0.95, -0.056983392702}},
			{{0.4, 2.172490771449}, {0.5, 1.578119364308}, {0.6, 1.128914493958}, {0.7, 0.763879330389}, {0.8, 0.450255921997}, {0.9, 0.173634930481}, {0.95, 0.041854626694}},
			{{0.5, 1.812497259136}, {0.6, 1.329261678687}, {0.7, 0.937687398776}, {0.8, 0.598936838903}, {0.9, 0.29134084475}, {0.95, 0.145099377662}},
			{{0.5, 2.04638195268}, {0.6, 1.530602992696}, {0.7, 1.113536346559}, {0.8, 0.750433378397}, {0.9, 0.412393191374}, {0.95, 0.250246737233}},
			{{0.6, 1.734393111585}, {0.7, 1.292349858003}, {0.8, 0.903763024749}, {0.9, 0.536705517315}, {0.95, 0.35800808146}},
			{{0.6, 1.938021342857}, {0.7, 1.470864397417}, {0.8, 1.059094869674}, {0.9, 0.662674321542}, {0.95, 0.467494792469}},
			{{0.6, 2.143563100081}, {0.7, 1.651361764514}, {0.8, 1.215579822381}, {0.9, 0.790452000871}, {0.95, 0.578567987805}},
			{{0.7, 1.832671836087}, {0.8, 1.373329159907}, {0.9, 0.919723496374}, {0.95, 0.69121305013}},
			};
		
		public static String[] TestCompoundNameArray = {
			"Chlorogenic acid ",
			"Diethylacetamide ",
			"N-allyl aniline ",
			"7-Amino-4-methycoumarin",
			"Naphthalene acetamide ",
			"Naphthalene diol ",
			"Abscisic acid ",
			"Prednisone ",
			"Cortisone ",
			"Hydrocortisone ",
			"TBAC ",
			"anilinoacetaldehyde diethyl acetal",
			"Curcumin ",
			"TPAB ",
			"Diphenylamine ",
			"Di-n-pentyl phthalate ",
		};
		
		public static double[][] systemSuitabilityMeasuredValues = {
				{
					6.2143,
					6.572,
					7.2844,
					12.435,
					17.053,
					17.481,
					17.966,
					19.598,
					19.824,
					20.137,
					23.714,
					28.231,
					34.579,
					36.618,
					36.864,
					54.969,
				},
				{
					5.4726,
					5.9464,
					6.7372,
					10.272,
					13.406,
					13.805,
					13.887,
					14.851,
					14.994,
					15.232,
					17.913,
					21.869,
					25.146,
					26.277,
					27.237,
					39.479,
				},
				{
					3.0786,
					3.8607,
					4.9838,
					7.083,
					9.4531,
					9.8428,
					9.7247,
					10.403,
					10.519,
					10.716,
					12.931,
					16.518,
					18.56,
					19.31,
					20.475,
					30.049,
				},
				{
					1.2848,
					1.9961,
					3.4304,
					3.7628,
					5.1738,
					5.5449,
					5.2494,
					5.6242,
					5.7022,
					5.8651,
					7.6269,
					10.825,
					11.819,
					12.246,
					13.511,
					20.696,
				},
				{
					1.0076,
					1.3988,
					2.7205,
					2.2126,
					2.8724,
					3.1728,
					2.8352,
					2.9264,
					2.9715,
					3.1032,
					4.5078,
					7.5267,
					7.9459,
					8.2376,
					9.539,
					15.646,
				},
				{
					0.90161,
					1.1609,
					2.2731,
					1.5151,
					1.7182,
					1.8887,
					1.655,
					1.595,
					1.6167,
					1.6924,
					2.3513,
					5.0419,
					4.8763,
					4.9863,
					6.3057,
					10.981,
				},
				{
					0.87994,
					1.0895,
					1.9607,
					1.2736,
					1.35,
					1.4142,
					1.3026,
					1.253,
					1.2702,
					1.3025,
					1.3494,
					3.5458,
					3.0544,
					2.9489,
					4.3153,
					8.0366,
				},
				{
					0.85821,
					1.0339,
					1.6869,
					1.1271,
					1.159,
					1.1783,
					1.1142,
					1.0932,
					1.1113,
					1.121,
					0.98006,
					2.481,
					1.9332,
					1.5664,
					2.8122,
					4.8351,
				}
		};
		
		public static double[][] TestCompoundMZArray = {
			{355.10291}, // chlorogenic acid
			{116.10754},
			{134.09697},
			{176.04460}, // methyl amino coumarin
			{186.09189},
			{161.06026},
			{265.14398}, // abscisic acid
			{359.18585}, // prednisone
			{363.21715}, // hydrocortisone
			{361.20150}, // cortisone
			{242.28423}, // tetrabutylammonium
			{210.14940},
			{369.13381}, // curcumin
			{298.34683}, // tetrapentylammonium
			{170.09697},			
			{307.19093}, // di-n-pentyl phthalate
			
			
		};
		
		public static double[][][] TestCompoundsIsocraticDataArray = {
			{{0.05, 1.139849661762}, {0.1, 0.517945396338}, {0.2, -0.26883984462}, {0.3, -0.540670677753}, {0.4, -0.720292706719}, {0.5, -0.848126253203}, {0.6, -0.950534169966}},
			{{0.05, 1.055675517063}, {0.1, 0.669427043379}, {0.2, 0.171332065861}, {0.3, -0.112628936858}, {0.4, -0.278712562022}, {0.5, -0.376954330996}, {0.6, -0.436044165392}},
			{{0.05, 1.046385358071}, {0.1, 0.806476242917}, {0.2, 0.557266783464}, {0.3, 0.427208571524}, {0.4, 0.326841994729}, {0.5, 0.230685537712}, {0.6, 0.125171437815}, {0.7, -0.012648387331}, {0.8, -0.149146019322}},
			{{0.05, 1.746649505071}, {0.1, 1.293026242067}, {0.2, 0.674648194764}, {0.3, 0.28282227141}, {0.4, 0.022122464174}, {0.5, -0.164491188158}, {0.6, -0.297741467225}, {0.7, -0.453116916433}, {0.8, -0.544883346272}},
			{{0.1, 1.764709782856}, {0.2, 1.028424439408}, {0.3, 0.492714595213}, {0.4, 0.135300089897}, {0.5, -0.100571770411}, {0.6, -0.260338089937}, {0.7, -0.422082682693}, {0.8, -0.519287394191}},
			{{0.05, 2.086563781431}, {0.1, 1.734606660868}, {0.2, 1.077586764297}, {0.3, 0.567641809651}, {0.4, 0.208174305525}, {0.5, -0.051183957754}, {0.6, -0.237811287029}, {0.7, -0.43732264925}},
			{{0.1, 2.045358331832}, {0.2, 1.083832055013}, {0.3, 0.486317819045}, {0.4, 0.108332012748}, {0.5, -0.13864861175}, {0.6, -0.318385091042}, {0.7, -0.498279075191}, {0.8, -0.624211090712}},
			{{0.2, 1.262137046185}, {0.3, 0.519936806939}, {0.4, 0.080601670803}, {0.5, -0.182296476038}, {0.6, -0.347060304957}, {0.7, -0.502263456183}, {0.8, -0.583938753098}},
			{{0.2, 1.291217528508}, {0.3, 0.535556763672}, {0.4, 0.091209118963}, {0.5, -0.16725447096}, {0.6, -0.317065714386}, {0.7, -0.45851194832}, {0.8, -0.519287394191}},
			{{0.2, 1.32133079542}, {0.3, 0.57295287006}, {0.4, 0.129856215919}, {0.5, -0.13692179245}, {0.6, -0.302811110185}, {0.7, -0.463974844021}, {0.8, -0.540511217247}},
			{{0.2, 1.587326176049}, {0.3, 0.962983189885}, {0.4, 0.400313879435}, {0.5, -0.095842564167}, {0.6, -0.530722037377}},
			{{0.2, 1.717898913464}, {0.3, 1.329010099256}, {0.4, 0.994215931679}, {0.5, 0.70272581744}, {0.6, 0.450791434316}, {0.7, 0.216655141344}, {0.8, 0.008397821293}},
			{{0.3, 1.919989823992}, {0.4, 1.152925455412}, {0.5, 0.621094454985}, {0.6, 0.241014040154}, {0.7, -0.066401483308}},
			{{0.3, 2.203633537462}, {0.4, 1.359112992526}, {0.5, 0.652149437342}, {0.6, 0.073701564617}, {0.7, -0.494330916346}},
			{{0.4, 1.350024801252}, {0.5, 0.928693485207}, {0.6, 0.590012914491}, {0.7, 0.297680258103}, {0.8, 0.044921263323}},
			{{0.5, 1.938001984189}, {0.6, 1.448695476045}, {0.7, 1.041976099187}, {0.8, 0.676467107053}, {0.9, 0.315321610477}},
			};
		
		public static String[] OtherCompoundsNameArray = {
			"N,N-diethylacetamide",
			"N-allyl aniline",
			"1,3-naphthalenediol",
			"p-coumaric acid",
			"diphenylamine",
			"7-amino-4-methylcoumarin",
			"naphthalene acetamide",
			"2-phenylindole",
			"anilinoacetaldehyde diethyl acetal",
			"tetrabutylammonium",
			"dodecanophenone",
			"abscisic acid",
			"tetrapentylammonium",
			"di-n-pentyl phthalate",
			"chlorogenic acid",
			"prednisone",
			"cortisone",
			"hydrocortisone",
			"curcumin"
		};

		public static double[][][] OtherCompoundsIsocraticDataArray = {
				{{0.05, 1.139849661762}, {0.1, 0.517945396338}, {0.2, -0.26883984462}, {0.3, -0.540670677753}, {0.4, -0.720292706719}, {0.5, -0.848126253203}, {0.6, -0.950534169966}},

				{{0.05, 1.055675517063}, {0.1, 0.669427043379}, {0.2, 0.171332065861}, {0.3, -0.112628936858}, {0.4, -0.278712562022}, {0.5, -0.376954330996}, {0.6, -0.436044165392}},

				{{0.05, 1.046385358071}, {0.1, 0.806476242917}, {0.2, 0.557266783464}, {0.3, 0.427208571524}, {0.4, 0.326841994729}, {0.5, 0.230685537712}, {0.6, 0.125171437815}, {0.7, -0.012648387331}, {0.8, -0.149146019322}},

				{{0.05, 1.746649505071}, {0.1, 1.293026242067}, {0.2, 0.674648194764}, {0.3, 0.28282227141}, {0.4, 0.022122464174}, {0.5, -0.164491188158}, {0.6, -0.297741467225}, {0.7, -0.453116916433}, {0.8, -0.544883346272}},

				{{0.1, 1.764709782856}, {0.2, 1.028424439408}, {0.3, 0.492714595213}, {0.4, 0.135300089897}, {0.5, -0.100571770411}, {0.6, -0.260338089937}, {0.7, -0.422082682693}, {0.8, -0.519287394191}},

				{{0.05, 2.086563781431}, {0.1, 1.734606660868}, {0.2, 1.077586764297}, {0.3, 0.567641809651}, {0.4, 0.208174305525}, {0.5, -0.051183957754}, {0.6, -0.237811287029}, {0.7, -0.43732264925}},

				{{0.1, 2.045358331832}, {0.2, 1.083832055013}, {0.3, 0.486317819045}, {0.4, 0.108332012748}, {0.5, -0.13864861175}, {0.6, -0.318385091042}, {0.7, -0.498279075191}, {0.8, -0.624211090712}},

				{{0.2, 1.262137046185}, {0.3, 0.519936806939}, {0.4, 0.080601670803}, {0.5, -0.182296476038}, {0.6, -0.347060304957}, {0.7, -0.502263456183}, {0.8, -0.583938753098}},

				{{0.2, 1.291217528508}, {0.3, 0.535556763672}, {0.4, 0.091209118963}, {0.5, -0.16725447096}, {0.6, -0.317065714386}, {0.7, -0.45851194832}, {0.8, -0.519287394191}},

				{{0.2, 1.32133079542}, {0.3, 0.57295287006}, {0.4, 0.129856215919}, {0.5, -0.13692179245}, {0.6, -0.302811110185}, {0.7, -0.463974844021}, {0.8, -0.540511217247}},

				{{0.2, 1.587326176049}, {0.3, 0.962983189885}, {0.4, 0.400313879435}, {0.5, -0.095842564167}, {0.6, -0.530722037377}},

				{{0.2, 1.717898913464}, {0.3, 1.329010099256}, {0.4, 0.994215931679}, {0.5, 0.70272581744}, {0.6, 0.450791434316}, {0.7, 0.216655141344}, {0.8, 0.008397821293}},

				{{0.3, 1.919989823992}, {0.4, 1.152925455412}, {0.5, 0.621094454985}, {0.6, 0.241014040154}, {0.7, -0.066401483308}},

				{{0.3, 2.203633537462}, {0.4, 1.359112992526}, {0.5, 0.652149437342}, {0.6, 0.073701564617}, {0.7, -0.494330916346}},

				{{0.4, 1.350024801252}, {0.5, 0.928693485207}, {0.6, 0.590012914491}, {0.7, 0.297680258103}, {0.8, 0.044921263323}},

				{{0.5, 1.938001984189}, {0.6, 1.448695476045}, {0.7, 1.041976099187}, {0.8, 0.676467107053}, {0.9, 0.315321610477}},

		};
	
	
	public static double roundToSignificantFigures(double num, int n) 
	{
	    if (num == 0) 
	    {
	        return 0;
	    }

	    final double d = Math.ceil(Math.log10(num < 0 ? -num: num));
	    final int power = n - (int) d;

	    final double magnitude = Math.pow(10, power);
	    final long shifted = Math.round(num * magnitude);
	    
	    return shifted / magnitude;
	}

	
	public static String[] requiredGradientProgramNames = {"Gradient A", "Gradient B", "Gradient C", "Gradient D", "Gradient E", "Gradient F", "Gradient G", "Gradient H"};
	

	
		// Enter the retention times of the standards here
		// 
		// The first part of the array lists the retention times (in min) of the back-calculation standards
		// The second part of the array lists the retention times (in min) of the test compounds, in the same order they are listed below
		// Important: if a retention time isn't available, just enter a zero ('0') in its place. 
		public static double[][][] dPredefinedValues = {
			{ 
				{
					1.1712,
					1.5576,
					3.6872,
					5.4381,
					6.9974,
					10.2153,
					14.8964,
					20.9038,
					26.7776,
					32.0302,
					36.7357,
					41.0289,
					45.0889,
					49.002,
					52.8195,
					56.5404

				},
				{
					1.1728,
					1.6138,
					3.5967,
					5.0958,
					6.3283,
					8.7805,
					12.1857,
					16.368,
					20.3258,
					23.8413,
					27.0108,
					29.9313,
					32.7099,
					35.3945,
					38.006,
					40.5335,
					43.0778

				},
				{
					1.0625,
					1.3087,
					2.2888,
					3.394,
					4.2392,
					6.0754,
					8.7025,
					11.9491,
					15.0165,
					17.7516,
					20.2316,
					22.529,
					24.7223,
					26.8436,
					28.9007,
					30.876,
					32.8651,
				},
				{
					0.981,
					1.0872,
					1.412,
					1.8345,
					2.2756,
					3.3352,
					4.9928,
					7.1988,
					9.3942,
					11.4117,
					13.2724,
					15.0141,
					16.6822,
					18.2934,
					19.8466,
					21.3287,
					22.8538,
					24.8737,

				},
				{
					0.9303,
					0.997,
					1.1628,
					1.322,
					1.5395,
					2.0887,
					3.0496,
					4.4971,
					6.1254,
					7.7446,
					9.2996,
					10.7855,
					12.2163,
					13.5999,
					14.9312,
					16.1891,
					17.43,
					18.9996

				},
				{
					0,
					0.9461,
					1.0493,
					1.1027,
					1.2265,
					1.4974,
					1.9905,
					2.7994,
					3.8171,
					4.9372,
					6.0867,
					7.2253,
					8.3369,
					9.4172,
					10.4472,
					11.4159,
					12.3803,
					13.5947,
					15.1946,
					17.351,

				},
				{
					0,
					0.9297,
					1.0112,
					1.0419,
					1.1247,
					1.2822,
					1.5318,
					1.9611,
					2.5601,
					3.2977,
					4.1262,
					5.0032,
					5.8906,
					6.7684,
					7.6128,
					8.4062,
					9.1979,
					10.1443,
					11.3569,

				},
				{
					0,
					0.9192,
					0.9827,
					0.9835,
					1.0463,
					1.1437,
					1.2761,
					1.4943,
					1.8164,
					2.2328,
					2.702,
					3.1933,
					3.689,
					4.1695,
					4.6332,
					5.1225,
					5.7005,
					6.4165,
					7.3146,

				},
			},
		};
		
		public static double[][] dPredefinedExpected = {
			{
				6.2143,
				6.572,
				7.2844,
				12.435,
				17.053,
				17.481,
				17.966,
				19.598,
				19.824,
				20.137,
				23.714,
				28.231,
				34.579,
				36.618,
				36.864,
				54.969,
	
			},
			{
				5.4726,
				5.9464,
				6.7372,
				10.272,
				13.406,
				13.805,
				13.887,
				14.851,
				14.994,
				15.232,
				17.913,
				21.869,
				25.146,
				26.277,
				27.237,
				39.479,
			},
			{
				3.0786,
				3.8607,
				4.9838,
				7.083,
				9.4531,
				9.8428,
				9.7247,
				10.403,
				10.519,
				10.716,
				12.931,
				16.518,
				18.56,
				19.31,
				20.475,
				30.049,

			},
			{
				1.2848,
				1.9961,
				3.4304,
				3.7628,
				5.1738,
				5.5449,
				5.2494,
				5.6242,
				5.7022,
				5.8651,
				7.6269,
				10.825,
				11.819,
				12.246,
				13.511,
				20.696,

			},
			{
				1.0076,
				1.3988,
				2.7205,
				2.2126,
				2.8724,
				3.1728,
				2.8352,
				2.9264,
				2.9715,
				3.1032,
				4.5078,
				7.5267,
				7.9459,
				8.2376,
				9.539,
				15.646,

			},
			{
				0.90161,
				1.1609,
				2.2731,
				1.5151,
				1.7182,
				1.8887,
				1.655,
				1.595,
				1.6167,
				1.6924,
				2.3513,
				5.0419,
				4.8763,
				4.9863,
				6.3057,
				10.981,

			},
			{
				0.87994,
				1.0895,
				1.9607,
				1.2736,
				1.35,
				1.4142,
				1.3026,
				1.253,
				1.2702,
				1.3025,
				1.3494,
				3.5458,
				3.0544,
				2.9489,
				4.3153,
				8.0366,

			},
			{
				0.85821,
				1.0339,
				1.6869,
				1.1271,
				1.159,
				1.1783,
				1.1142,
				1.0932,
				1.1113,
				1.121,
				0.98006,
				2.481,
				1.9332,
				1.5664,
				2.8122,
				4.8351,

			}
		};

		public static double[] dPredefinedInjectionData = {
			1.1629,
			1.6027,
			0,
			5.8749,
			7.4622,
			10.4139,
			10.4728,
			14.4728,
			19.4714,
			24.2603,
			28.5226,
			32.3518,
			35.9005,
			39.2251,
			42.4702,
			45.6569,
			48.7592,
			51.7631,
			54.6137,
			55.7188,
			58.0056,
		};

		
		public static double[] finalFitExpected = {
			7.1544,
			6.6072,
			4.8538,
			3.3004,
			2.5905,
			2.1431,
			1.8307,
			1.5569,

		};
	
	public static String convertMZToString(double[] mzValues)
	{
		String str = "";
		for (int j = 0; j < mzValues.length; j++)
		{
			str += mzValues[j];
			if (j < mzValues.length - 1)
				str += ", ";
		}
		
		return str;
	}
	
	public static double[][] convertGradientProgramInConventionalFormToRegularForm(
			double[][] gradientProgramInConventionalProgram,
			double initialTime, double initialSolventComposition) {
		double[][] newGradientProgram = new double[gradientProgramInConventionalProgram.length + 2][2];
    	int iPointCount = 0;
    	

    	newGradientProgram[iPointCount][0] = 0.0;
    	newGradientProgram[iPointCount][1] = (Double)gradientProgramInConventionalProgram[0][1];
    	double dLastTime = 0;
		iPointCount++;
		
    	// Go through the gradient program table and create an array that contains solvent composition vs. time
		for (int i = 0; i < gradientProgramInConventionalProgram.length; i++)
		{
    		if ((Double)gradientProgramInConventionalProgram[i][0] > dLastTime)
    		{
    			double dTime = (Double)gradientProgramInConventionalProgram[i][0];
    			double dFractionB = (Double)gradientProgramInConventionalProgram[i][1];
    			
				newGradientProgram[iPointCount][0] = dTime;
				newGradientProgram[iPointCount][1] = dFractionB;
    	    	iPointCount++;
    		
    	    	dLastTime = dTime;
    		}
		}
		
		// Add another point past the end of the gradient to make it flatten out and go forever.
		newGradientProgram[iPointCount][0] = newGradientProgram[iPointCount - 1][0] * 2;
		newGradientProgram[iPointCount][1] = (Double)gradientProgramInConventionalProgram[gradientProgramInConventionalProgram.length-1][1];
    	iPointCount++;

		// Ideal series finished
		// Now cut it down to the correct size
		double tempArray[][] = new double[iPointCount][2];
		for (int i = 0; i < iPointCount; i++)
		{
			tempArray[i][0] = newGradientProgram[i][0];
			tempArray[i][1] = newGradientProgram[i][1];
		}

		return tempArray;
		
	}
	
	public static double[][] injectionModeData = 	{{0,7.419},
											{7,11.269},
											{14,17.013},
											{21,23.43},
											{28,30.058},
											{35,36.769},
											{42,43.535},
											{49,50.352},
											{56,57.206}};
}